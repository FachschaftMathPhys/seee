<fieldset>
<h1>Form <%=h @form.name %> (<%=h @form.semester.title %>) Preview</h1>
  <%= (not @form.form_checks_out?) ? "<strong>⚠ Form is invalid</strong><br/>" : ""%>

 <table>
    <% for item in
      [
        ["Semester",      @form.semester.title],
        ["Name",          @form.name],
        ["Table",         @form.db_table]
      ]
    %>
      <tr style="background: #<%= cycle('efefef', 'fff') %>">
        <th><%=h item.shift %></th>
        <% for data in item do %> <td><%=h data %></td> <% end %>
      </tr>
    <% end %>
  </table><br/>

  <%= nav_links %>
</fieldset>

<% if @form.questions.count { |q| q.type == "tutor_table" } >= 2 %>
  <fieldset>
    <legend>ERROR: more than one tutor_table</legend>
    <p>You specified a tutor_table question more than once. However, it is
    currently not possible to evaluate more than one tutor per sheet. The
    software is not equipped to differentiate to which tutor a question
    belongs.</p>
    <p>If you need to evaluate more than one tutor, hand sheets out twice.</p>
  </fieldset>
<% end %>

<% if @form.has_duplicate_db_columns? %>
  <fieldset>
    <legend>ERROR: duplicate db columns</legend>
    Some of the questions have the same db column. This doesn’t make
    any sense and G'n'T Eval will break if you do not fix this.
    <table>
      <tr style="background: #<%= cycle('efefef', 'fff')%>">
        <th>db column</th><th>offending questions</th>
      </tr>
    <%
    @form.get_duplicate_db_columns.each do |col, quests|
      quests.each do |q|
    %>
      <tr style="background: #<%= cycle('efefef', 'fff')%>">
        <td><%=col%></td><td><%=q.strip_common_tex%></td>
      </tr>
    <%
      end
    end
    %>
    </table>
  </fieldset>
<% end %>

<% if @form.has_questions_without_visualizer? %>
  <fieldset>
    <legend>WARNING: questions without visualizer (defaults to empty)</legend>
    <table>
      <tr style="background: #<%= cycle('efefef', 'fff')%>">
        <th>offending questions</th>
      </tr>
    <% @form.get_questions_without_visualizer.each do |q| %>
      <tr style="background: #<%= cycle('efefef', 'fff')%>">
        <td><%=q.text.strip_common_tex%></td>
      </tr>
    <% end %>
    </table>
  </fieldset>
<% end %>

<% oosv = @form.find_out_of_scope_variables
unless oosv.empty?
%>
  <fieldset>
    <legend>ERROR: Out of scope variables</legend>
      <p>
        There are some variables which can be used to design the form, e.g.
        \lect to refer to the lecturer’s name. These variables may be valid
        for the whole sheet when the questions are used in the form due to
        the fact that a form is bound to a lecturer. However they are
        actually only valid for certain parts of the form. Consider
        \lect: It can only valid for questions that depend on the lecturer
        (i.e. repeat_for = lecturer). Forms should support multiple
        lecturers per course, therefore these variables cannot be used
        outside the correct repeat_for-scope.
      </p>
      <table>
        <tr style="background: #<%= cycle('efefef', 'fff')%>">
          <th>message</th>
        </tr>
      <% oosv.each do |err| %>
        <tr style="background: #<%= cycle('efefef', 'fff')%>">
          <td><%=err%></td>
        </tr>
      <% end %>
      </table>
  </fieldset>
<% end %>

<a id="tex-image-preview"></a>
<%= render :partial => "shared/preview_big", :locals => {:text => nil}  %>


<fieldset id="tex-code-preview">
  <legend>TeX-Code used for generating the preview:</legend>
  <%= nav_links %>
  <pre style="max-width:850px; max-height:700px; overflow:scroll"><%=h form_tex_code(@form) %></pre>
  You can use this line to compile the document yourself:
  <pre><%=h Seee::Config.commands[:pdflatex_real] %> somefile.tex</pre>
</fieldset>

<fieldset id="ruby-yaml-code">
  <legend>Ruby-fied YAML Code:</legend>
  <%= nav_links %>
  <pre  style="max-width:850px; max-height:700px; overflow:scroll"><%=h (@form.is_a?(String) ? "wrong!"  : @form.pretty_abstract_form) %></pre>
</fieldset>

<fieldset>
  <%= nav_links %>
</fieldset>
