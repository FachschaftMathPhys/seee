// applies background grandient to element for all browsers.
@mixin addgradient($from, $to, $normalbg) {
  background: $normalbg, -moz-linear-gradient($from, $to);
  background: $normalbg, -o-linear-gradient($from, $to);
  background: $normalbg, -ms-linear-gradient($from, $to);
  background: $normalbg, -webkit-gradient(linear, 0 0, 0 100%, from($from), to($to));
}

// keep height in sync with formeditor.js. grep this: CLOSEDHEIGHT
$closed-height: 3.5rem;

#form_editor {


  max-width:70rem;
  counter-reset:section;

  ol, ul {
    margin: 0;
    list-style-type: none;
    li {
      padding:0;
    }
  }

  label {
    display: inline-block;
    width:10rem;
    overflow:hidden;
    height:2.5rem;
    line-height:2.2rem;
    vertical-align:top;
    white-space: nowrap;
  }

  input {
    width:44rem;
    height:1.5rem;
  }

  textarea {
    min-height:4rem;
    width:42.4rem;
    @include addgradient(#FFFFFF, #FBFBFB, url(textarea-cheap-lines.png) no-repeat 0rem 0.8rem);
    padding-left:2rem;
    line-height:16px;
    resize: none;
    overflow-x:auto;
    overflow-y:hidden;

    + a {
      line-height:2.2rem;
      vertical-align:top;
    }
  }

  select {
    width: 44rem + 0.8rem;
  }

  span {
    display:block;
    margin-left:0.2rem;
  }

  .indent {
    border-left:0.1rem solid #ccc;
    border-bottom:0.1rem solid #ccc;
    margin-left:0.4rem;
    padding-left:1rem;
    margin-bottom:1rem;

    label {
      width:8.6rem - 0.1rem;
    }

    .indent label {
      width:7.2rem - 0.2rem;
    }
  }

  .hidden {
    display: none;
  }

  /* don’t allow genderization for box descriptions */
  .boxes .genderize {
    display: none;
  }

  .page {
    &:before {
      content: "page break";
      background:#ccc;
      display:block;
      font-weight:bold;
      padding:1rem;
      border-bottom:0.1rem solid #000;
      margin-bottom:1rem;
    }
  }

  .section {
/*

*/
    counter-increment:section;
    &:before {
      margin-top:2rem;
      content: "Section " counter(section) ": " attr(data-title);
      display:block;
      background:#eee;
      border-bottom:0.1rem solid #aaa;
      padding:1rem;
      margin-bottom:1rem;
      font-weight:bold;
    }
  }

  .question {
    counter-increment:question;
    .header {
      &:before {
        content: "Question " counter(section) "."  counter(question) ": (" attr(data-db-column) ") " attr(data-qtext);
      }
    }
  }

  .sortable-question-placeholder {
    height: $closed-height - 2*1rem;
    margin: 1rem 0;
    margin-left:-2.1rem;
    background-image: -ms-linear-gradient(left, #FFEC9E 0%, #FFFFFF 70%);
    background-image: -moz-linear-gradient(left, #FFEC9E 0%, #FFFFFF 70%);
    background-image: -o-linear-gradient(left, #FFEC9E 0%, #FFFFFF 70%);
    background-image: -webkit-linear-gradient(left, #FFEC9E 0%, #FFFFFF 70%);
    background-image: linear-gradient(to right, #FFEC9E 0%, #FFFFFF 70%);
    display:block;
    &:last-of-type {
      // fix flickering, not sure why this is required
      margin-bottom:3rem;
    }
  }

  .collapsable {
    overflow: hidden;

    .header {
      margin-top:0.5rem;
      display:block;
      margin-bottom:0.5rem;
      height:2.6rem;
      overflow: hidden;
      background:rgba(245,245,245,0.8);
      line-height:2.6rem;
      padding-left:0.5rem;

      a {
        display:block;
        float:right;
        padding-left:0.5rem;
        width:2rem;
        height:2.4rem;
        font-size:2rem;
        overflow:hidden;
        margin-left:0.5rem;

        border:0.1rem solid #ddd;
        &:hover {
          border:0.1rem solid #ccc;
          text-shadow:none;
        }

        &.collapse:before { content: "↟"; }
        &.move { cursor: move }
      }
    }

    &.closed {
      height: $closed-height;
      .header a.collapse:before { content: "↡"; }
    }
  }

  .heading > .heading {
    border:1px solid red;
    &:before {
      content: "invalid headings!";
    }
  }
}
